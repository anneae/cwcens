% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kernel.est.R
\name{kernel.est}
\alias{kernel.est}
\title{Estimate the probability in state and restricted mean time in an illness-death
model with component-wise censoring}
\usage{
kernel.est(
  dat,
  bandwidth,
  tau2,
  prob.times = NULL,
  mu.times = NULL,
  boundary = "boundary.kernel",
  kfun = "epanechnikov",
  std.err = "none",
  B = 50,
  boot.seed = NULL,
  scale = 1
)
}
\arguments{
\item{dat}{a dataframe with one row per individual with the variables
\code{t1-tm} and \code{x1-xm} where \code{m}
is the number of visits and \code{ti} and \code{xi} are the time and status at
each visit, and the variables \code{dtime} and \code{dstatus} which are the time
and event indicator for death, and the variable \code{nvisits} is the number of visits.
\code{xi=1} represents alive and event free
(state 1 in a multistate illness-death model), and \code{xi=2} represents alive with event.}

\item{bandwidth}{specifies the bandwidth to be used for the kernel estimator.
This can be selected data-adaptively using the \code{dab()} function.}

\item{tau2}{the maximum time that individuals were at risk for a visit,
based on the study design.}

\item{prob.times}{a vector of times at which probability in state will be estimated}

\item{mu.times}{a vector of restriction times at which restricted mean time
in state will be estimated}

\item{boundary}{specifies how kernel estimation is done in the left boundary region
from zero to the bandwidth. The default is \code{boundary.kernel}, meaning a boundary
 kernel is used in the left boundary region. Set \code{boundary = 'interpolation'}
 to use linear interpolation through the points (0,1) and (h, r) where h is the
 bandwidth and r is the kernel estimate at time h.}

\item{kfun}{specifies the kernel function to be used for estimation. The default
is \code{epanechnikov}; other possible values are \code{triweight}, \code{biweight} and \code{uniform}}

\item{std.err}{If \code{std.err= 'asymptotic'}  or \code{'boot'}, the function
calculates the standard error estimates and 95\% confidence intervals for each
quantity using the asymptotic or bootstrap estimators. (\code{std.err= 'none'} is the default.)}

\item{B}{the number of bootstrap samples; the default value of 50 for the sake
of computation time, but we recommend increasing it}

\item{boot.seed}{If \code{boot.seed} is specified, \code{set.seed(boot.seed)}
will be run before generating bootstrap samples, so the samples can be reproduced.}

\item{scale}{a scaling factor for the restricted mean time in state output. For example,
if times are in days and you want the output to reflect restricted mean years in state,
set \code{scale = 365.25}.}
}
\value{
A list with up to two elements: an element called \code{prob.info}  if \code{prob.times} was non-null,
and an element called \code{mu.info} if \code{mu.times} was non-null. \code{prob.info} contains
 probability in state estimates and \code{mu.info} contains restricted mean time
 in state estimates.
 The columns in \code{prob.info} are \code{t, p1, p2, p3} for time and
 probability in state 1, 2 and 3, respectively. If \code{std.err ='boot'} or
 \code{'asymptotic'}, additional columns are added with standard error estimates
 and lower and upper limits of the 95\% confidence interval for each estimate.
 The columns in \code{mu.info} are analogous.
}
\description{
This function implements the non-parametric kernel estimator of the probability
in state and restricted mean time in state in an
illness-death model with component-wise censoring, based on the method of
Sun, Huang and Wang (2017).
}
\examples{
mydat <- simdat(50, scale12=1/.0008, scale13=1/.0002, scale23=1/.0016,
vital.lfu=c(30.4*36, 30.4*48),
visit.schedule = 30.4*c(6, 12, 18, 24, 30, 36, 42, 48), scatter.sd=10)
kernel.est(mydat, bandwidth=12*30.4, tau2=30.4*48, prob.times=30.4*48, mu.times=30.4*48,
boundary = 'boundary.kernel', kfun='epanechnikov',
std.err='none',  scale=12*30.4)
}
